---
- hosts: all
  vars:
    username: vagrant
    password: "{{ vagrant_password }}"
    # username: deploy
    # password: "{{ deploy_password }}"
    # public_key: ~/.ssh/id_rsa.pub
  remote_user: root
  gather_facts: false
  # become: true
  become_method: sudo
  pre_tasks:
    - name: "include_task_vars default vault"
      include_vars:
        file: inventories/vault
    - name: "include_vars default all.yml"
      include_vars:
        file: inventories/all.yml
    # - name: "Apply Nix role"
    #   include_role: 
    #     name: ableton.nix

    # Install Haskell tooling
    - name: Ensure Haskell tooling is installed"
      command: > 
        nix-env -f "<nixpkgs>" -iA haskellPackages.ghc haskellPackages.cabal-install

    - name: Gathering facts
      ansible.builtin.setup:
  # roles:
    # - { role: ufw, become: yes }
    # - { role: ssh , become: yes }
    # - { role: common, become: yes }
    # - { role: ableton.nix, become: yes }
#    - { role: cardano-node, become: yes }

  post_tasks:
    # - name: "list vagrant home"
    #   command:
    #     "ls -l /home/vagrant/.nix-profile/etc/profile.d/"

    - name: "show env vars using debug"
      command: "echo $USER, $PATH"

    # - name: "show PATH using debug"
    #   debug:
    #     msg: "{{ PATH is $$PATH }}"

    # - name: "cat vagrant profile"
    #   command:
    #     "cat /home/vagrant/.profile"

    # - name: "load vagrant profile"
    #   command:
    #     ". /home/vagrant/.profile"

    # - name: "Source Nix"
    #   command: "/home/vagrant/.nix-profile/etc/profile.d/nix.sh"
    # - name: "Verify Nix installed"
    #   command: "nix-store --gc"
    #   # environment:
    #   #   PATH: "{{ $PATH:/home/vagrant/.nix-profile/bin }}"

    # # # Install cardano node
    # - name: Ensure cardano-node is installed"
    #   command: > 
    #     nix-env --install /nix/store/3vfi0rdgcr2fy7pihla24bci8m5vljx4-cardano-node-exe-cardano-node-x86_64-unknown-linux-musl-1.33.0
    #       --extra-substituters  https://iohk-nix-cache.s3-eu-central-1.amazonaws.com/
    #       --option binary-caches https://iohk-nix-cache.s3-eu-central-1.amazonaws.com/
    #       --prebuilt-only
    #   tags:
    #   - always 

    - name: Haskell / Cabal is working
      assert:
        that: "cabal "

    - name: Assert that Nix is working
      assert:
        that: "nix-store --gc"
        success_msg: 'Nix is working.'
        fail_msg: 'Nix is NOT working correctly.'
  